@using Yonderfix.web.Helpers
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Authorization
@using Yonderfix.web.Services
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthStateProvider

<h3>Processing External Login...</h3>
<p>Please wait while we log you in.</p>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Convert the current URI to an absolute URI.
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);

        // Parse the query string to extract token values.
        var queryParams = QueryHelpers.ParseQuery(uri.Query);

        // Extract the access token.
        string accessToken = queryParams.TryGetValue("access_token", out var atValue) ? atValue.ToString() : string.Empty;
        // Optionally extract the refresh token.
        string refreshToken = queryParams.TryGetValue("refresh_token", out var rtValue) ? rtValue.ToString() : string.Empty;

        if (!string.IsNullOrEmpty(accessToken))
        {
            // Mark the user as authenticated with both the access and refresh tokens.
            await AuthStateProvider.MarkUserAsAuthenticated(accessToken, refreshToken);
            // Redirect to the home page (or another protected page) after successful login.
            Navigation.NavigateTo("/");
        }
        else
        {
            // If no token is found, redirect back to the login page.
            Navigation.NavigateTo("/login");
        }
    }
}
